name: .NET

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --configuration Release --no-restore
#    - name: Test
#      run: dotnet test --no-build --verbosity normal
    - name: Publish NuGet Sentral.API
      uses: brandedoutcast/publish-nuget@v2.5.5
      with:
        # Filepath of the project to be packaged, relative to root of repository
        PROJECT_FILE_PATH: Sentral.API/Sentral.API.csproj
        NUGET_KEY: ${{secrets.NUGET}}
        VERSION_FILE_PATH: PackageVersion
        VERSION_REGEX: ^(.*)$
    - name: Publish NuGet Sentral.API.PowerShell
      uses: brandedoutcast/publish-nuget@v2.5.5
      with:
        # Filepath of the project to be packaged, relative to root of repository
        PROJECT_FILE_PATH: Sentral.API.PowerShell/Sentral.API.PowerShell.csproj
        NUGET_KEY: ${{secrets.NUGET}}
        VERSION_FILE_PATH: PackageVersion
        VERSION_REGEX: ^(.*)$    
      
    - name: Delete Previous Latest Release
      uses: larryjoelane/delete-release-action@v1.0.24
      with:
        release-name: latest
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: latest
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: true
        
    - name: Package dlls from build
      run: Get-ChildItem -Recurse |where {$_.Directory.Name -eq "Release" -and $_.Name -like "*.nupkg" } | Compress-Archive -DestinationPath ./Sentral.API.zip
      shell: powershell
    - name: Upload Release Asset 
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./Sentral.API.zip
        asset_name: Sentral.API.zip
        asset_content_type: application/zip

